---
- name: Do base configuration
  include_role:
    name: "ten7.flightdeck_base"
- name: Install needed software
  apk:
    name: "{{ _pkgs | join(',') }}"
    state: present
    update_cache: yes
  vars:
    _pkgs:
      - "apache2"
      - "libcap"
      - "zlib"
      - "apache2"
      - "apache2-proxy"
      - "php82-apache2"
      - "php82"
      - "git"
      - "patch"
      - "curl"
      - "go-task"
      - "php82-bcmath"
      - "php82-ctype"
      - "php82-curl"
      - "php82-dom"
      - "php82-fileinfo"
      - "php82-gd"
      - "php82-iconv"
      - "php82-intl"
      - "php82-json"
      - "php82-ldap"
      - "php82-mbstring"
      - "php82-pecl-memcached"
      - "php82-mysqli"
      - "php82-mysqlnd"
      - "php82-opcache"
      - "php82-openssl"
      - "php82-pecl-apcu"
      - "php82-pecl-imagick"
      - "php82-phar"
      - "php82-sqlite3"
      - "php82-odbc"
      - "php82-pdo_odbc"
      - "php82-pdo"
      - "php82-pdo_mysql"
      - "php82-pdo_sqlite"
      - "php82-phar"
      - "php82-pecl-redis"
      - "php82-soap"
      - "php82-session"
      - "php82-simplexml"
      - "php82-sodium"
      - "php82-tokenizer"
      - "php82-xdebug"
      - "php82-exif"
      - "php82-xml"
      - "php82-xmlreader"
      - "php82-xmlwriter"
      - "php82-zip"
      - "php82-zlib"
      - "py3-passlib"
      - "py3-mysqlclient"
      - "py3-jmespath"
      - "composer"
      - "mariadb-client"
      - "rsync"
      - "openssh-client"
      - "nodejs"
      - "npm"
      - "libsass"
  notify:
    - clear caches
- name: Add global php symlink
  file:
    src: "/usr/bin/php82"
    dest: "/usr/local/bin/php"
    state: link
    force: yes
    follow: no
- name: Add global go-task symlink
  file:
    src: "/usr/bin/go-task"
    dest: "/usr/local/bin/task"
    state: link
    force: yes
    follow: no
- name: Force Composer to be ran with PHP 8.2
  lineinfile:
    path: "/usr/bin/composer"
    regexp: '^/usr/bin/php8'
    line: '/usr/bin/php82 /usr/bin/composer.phar $@'
- name: Ensure key directories are owned by apache
  file:
    path: "{{ item }}"
    state: directory
    owner: "apache"
    group: "apache"
    mode: "u=rwx,g=rwx,o=r"
    recurse: yes
  loop:
    - "/etc/apache2"
    - "/etc/ssl/apache2"
    - "/etc/apache2/sites.d"
    - "/etc/php82"
    - "/run/apache2"
    - "/var/log/apache2"
    - "/var/www"
    - "/var/www/.npm-global"
    - "/srv/html"
- name: Link logs files to stdout for the Docker log collector
  file:
    src: "{{ item }}"
    dest: "/dev/stdout"
    state: link
    force: yes
    follow: no
  loop:
    - "/var/log/apache2/access.log"
    - "/var/log/apache2/000_default-access_log"
    - "/var/log/apache2/000_default_ssl-access_log"
- name: Link logs files to stderr for the Docker log collector
  file:
    src: "{{ item }}"
    dest: "/dev/stderr"
    state: link
    force: yes
    follow: no
  loop:
    - "/var/log/apache2/error.log"
    - "/var/log/apache2/000_default-error_log"
    - "/var/log/apache2/000_default_ssl-error_log"
- name: Set node global packages to install as user-local
  shell: >
    npm config set prefix '/var/www/.npm-global'
  become: yes
  become_user: "apache"
  become_method: "su"
- name: Install theme utilities
  shell: >
    npm install -g sass gulp
  become: yes
  become_user: "apache"
  become_method: "su"
- name: Template default index.html
  template:
    src: "templates/index.html"
    dest: "/srv/html/index.html"
    owner: "apache"
    group: "apache"
    mode: "u=rw,g=r,o=r"
